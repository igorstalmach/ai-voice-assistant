// TODO: copy documentation comments from openai python package
// NOTE: the openai package is currently 1.7MB and doesn't provide only type defs package
// as a result it's better to manually create the types if needed

type ChoiceDeltaToolCallFunction = {
  arguments?: string;
  name?: string;
};

type ChoiceDeltaToolCall = {
  index: number;
  id?: string;
  function?: ChoiceDeltaToolCallFunction;
  type?: 'function';
};

type ChoiceDelta = {
  /**
   * The contents of the chunk message.
   */
  content?: string;

  /**
   * Deprecated and replaced by `tool_calls`.
   *
   * The name and arguments of a function that should be called, as generated by the
    model.
   */
  function_call: null;

  /**
   * The role of the author of this message.
   */
  role?: 'system' | 'user' | 'assistant' | 'tool';
  tool_calls?: ChoiceDeltaToolCall[];
};

type TopLogprob = {
  token: string;
  bytes: number[]; // NOTE: type may differ adjust accordingly
};

type ChatCompletionTokenLogprob = {
  token: string;
  bytes?: number[]; // NOTE: type may differ adjust accordingly
  logprob: number;
  top_logprobs: TopLogprob[];
};

type ChoiceLogprobs = {
  content?: ChatCompletionTokenLogprob[];
};

type Choice = {
  delta: ChoiceDelta;
  finish_reason?: 'stop' | 'length' | 'tool_calls' | 'content_filter' | 'function_call';
  index: number;
  logprobs?: ChoiceLogprobs;
};

export type ChatCompletionChunk = {
  id: string;
  choices: Choice[];
  created: number;
  model: string;
  object: 'chat.completion.chunk';
  system_fingerprint?: string;
};
